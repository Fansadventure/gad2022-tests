package gad.abtree.tests;

import gad.abtree.ABTree;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertTrue;

public class InsertTests {

    /* Die Tests wurden auf einer Linux/GNU-Maschine erstellt und können auf Windows-Maschinen zu Problemen führen
       (siehe LF/CRLF für weitere Informationen)

       Weiters wurden die Formatierungen der delete-Tests nicht angepasst und sind daher höchstwahrscheinlich
       fehlerhaft.
    */

    @Test
    void bigSampleInsertAndRemoveSequence() {
        ABTree tree = new ABTree(2, 4);
        assertTrue(tree.validAB());
        assertEquals("""
                digraph {
                \tnode [shape=record];
                }""", tree.toString());

        tree.insert(109);
        assertEquals("""
                digraph {
                \tnode [shape=record];
                \tstruct0 [label="<f0> |<f1> 109|<f2> "];
                \tstruct0:<f0> -> struct1;
                \tstruct1 [label=leaf, shape=ellipse];
                \tstruct0:<f2> -> struct2;
                \tstruct2 [label=leaf, shape=ellipse];
                }""", tree.toString());

        assertTrue(tree.validAB());
        tree.insert(23);


        assertEquals("""
                digraph {
                \tnode [shape=record];
                \tstruct0 [label="<f0> |<f1> 23|<f2> |<f3> 109|<f4> "];
                \tstruct0:<f0> -> struct1;
                \tstruct1 [label=leaf, shape=ellipse];
                \tstruct0:<f2> -> struct2;
                \tstruct2 [label=leaf, shape=ellipse];
                \tstruct0:<f4> -> struct3;
                \tstruct3 [label=leaf, shape=ellipse];
                }""", tree.toString());
        assertTrue(tree.validAB());
        tree.insert(49);
        assertEquals("""
                digraph {
                \tnode [shape=record];
                \tstruct0 [label="<f0> |<f1> 23|<f2> |<f3> 49|<f4> |<f5> 109|<f6> "];
                \tstruct0:<f0> -> struct1;
                \tstruct1 [label=leaf, shape=ellipse];
                \tstruct0:<f2> -> struct2;
                \tstruct2 [label=leaf, shape=ellipse];
                \tstruct0:<f4> -> struct3;
                \tstruct3 [label=leaf, shape=ellipse];
                \tstruct0:<f6> -> struct4;
                \tstruct4 [label=leaf, shape=ellipse];
                }""", tree.toString());
        assertTrue(tree.validAB());
        tree.insert(180);
        assertEquals("""
                digraph {
                \tnode [shape=record];
                \tstruct0 [label="<f0> |<f1> 109|<f2> "];
                \tstruct0:<f0> -> struct1;
                \tstruct1 [label="<f0> |<f1> 23|<f2> |<f3> 49|<f4> "];
                \tstruct1:<f0> -> struct2;
                \tstruct2 [label=leaf, shape=ellipse];
                \tstruct1:<f2> -> struct3;
                \tstruct3 [label=leaf, shape=ellipse];
                \tstruct1:<f4> -> struct4;
                \tstruct4 [label=leaf, shape=ellipse];
                \tstruct0:<f2> -> struct5;
                \tstruct5 [label="<f0> |<f1> 180|<f2> "];
                \tstruct5:<f0> -> struct6;
                \tstruct6 [label=leaf, shape=ellipse];
                \tstruct5:<f2> -> struct7;
                \tstruct7 [label=leaf, shape=ellipse];
                }""", tree.toString());
        assertTrue(tree.validAB());
        tree.insert(120);
        assertEquals("""
                digraph {
                \tnode [shape=record];
                \tstruct0 [label="<f0> |<f1> 109|<f2> "];
                \tstruct0:<f0> -> struct1;
                \tstruct1 [label="<f0> |<f1> 23|<f2> |<f3> 49|<f4> "];
                \tstruct1:<f0> -> struct2;
                \tstruct2 [label=leaf, shape=ellipse];
                \tstruct1:<f2> -> struct3;
                \tstruct3 [label=leaf, shape=ellipse];
                \tstruct1:<f4> -> struct4;
                \tstruct4 [label=leaf, shape=ellipse];
                \tstruct0:<f2> -> struct5;
                \tstruct5 [label="<f0> |<f1> 120|<f2> |<f3> 180|<f4> "];
                \tstruct5:<f0> -> struct6;
                \tstruct6 [label=leaf, shape=ellipse];
                \tstruct5:<f2> -> struct7;
                \tstruct7 [label=leaf, shape=ellipse];
                \tstruct5:<f4> -> struct8;
                \tstruct8 [label=leaf, shape=ellipse];
                }""", tree.toString());
        assertTrue(tree.validAB());
        tree.insert(163);
        assertEquals("""
                digraph {
                \tnode [shape=record];
                \tstruct0 [label="<f0> |<f1> 109|<f2> "];
                \tstruct0:<f0> -> struct1;
                \tstruct1 [label="<f0> |<f1> 23|<f2> |<f3> 49|<f4> "];
                \tstruct1:<f0> -> struct2;
                \tstruct2 [label=leaf, shape=ellipse];
                \tstruct1:<f2> -> struct3;
                \tstruct3 [label=leaf, shape=ellipse];
                \tstruct1:<f4> -> struct4;
                \tstruct4 [label=leaf, shape=ellipse];
                \tstruct0:<f2> -> struct5;
                \tstruct5 [label="<f0> |<f1> 120|<f2> |<f3> 163|<f4> |<f5> 180|<f6> "];
                \tstruct5:<f0> -> struct6;
                \tstruct6 [label=leaf, shape=ellipse];
                \tstruct5:<f2> -> struct7;
                \tstruct7 [label=leaf, shape=ellipse];
                \tstruct5:<f4> -> struct8;
                \tstruct8 [label=leaf, shape=ellipse];
                \tstruct5:<f6> -> struct9;
                \tstruct9 [label=leaf, shape=ellipse];
                }""", tree.toString());
        assertTrue(tree.validAB());
        tree.insert(172);
        assertEquals("""
                digraph {
                \tnode [shape=record];
                \tstruct0 [label="<f0> |<f1> 109|<f2> |<f3> 172|<f4> "];
                \tstruct0:<f0> -> struct1;
                \tstruct1 [label="<f0> |<f1> 23|<f2> |<f3> 49|<f4> "];
                \tstruct1:<f0> -> struct2;
                \tstruct2 [label=leaf, shape=ellipse];
                \tstruct1:<f2> -> struct3;
                \tstruct3 [label=leaf, shape=ellipse];
                \tstruct1:<f4> -> struct4;
                \tstruct4 [label=leaf, shape=ellipse];
                \tstruct0:<f2> -> struct5;
                \tstruct5 [label="<f0> |<f1> 120|<f2> |<f3> 163|<f4> "];
                \tstruct5:<f0> -> struct6;
                \tstruct6 [label=leaf, shape=ellipse];
                \tstruct5:<f2> -> struct7;
                \tstruct7 [label=leaf, shape=ellipse];
                \tstruct5:<f4> -> struct8;
                \tstruct8 [label=leaf, shape=ellipse];
                \tstruct0:<f4> -> struct9;
                \tstruct9 [label="<f0> |<f1> 180|<f2> "];
                \tstruct9:<f0> -> struct10;
                \tstruct10 [label=leaf, shape=ellipse];
                \tstruct9:<f2> -> struct11;
                \tstruct11 [label=leaf, shape=ellipse];
                }""", tree.toString());
        assertTrue(tree.validAB());
        tree.insert(130);
        assertEquals("""
                digraph {
                \tnode [shape=record];
                \tstruct0 [label="<f0> |<f1> 109|<f2> |<f3> 172|<f4> "];
                \tstruct0:<f0> -> struct1;
                \tstruct1 [label="<f0> |<f1> 23|<f2> |<f3> 49|<f4> "];
                \tstruct1:<f0> -> struct2;
                \tstruct2 [label=leaf, shape=ellipse];
                \tstruct1:<f2> -> struct3;
                \tstruct3 [label=leaf, shape=ellipse];
                \tstruct1:<f4> -> struct4;
                \tstruct4 [label=leaf, shape=ellipse];
                \tstruct0:<f2> -> struct5;
                \tstruct5 [label="<f0> |<f1> 120|<f2> |<f3> 130|<f4> |<f5> 163|<f6> "];
                \tstruct5:<f0> -> struct6;
                \tstruct6 [label=leaf, shape=ellipse];
                \tstruct5:<f2> -> struct7;
                \tstruct7 [label=leaf, shape=ellipse];
                \tstruct5:<f4> -> struct8;
                \tstruct8 [label=leaf, shape=ellipse];
                \tstruct5:<f6> -> struct9;
                \tstruct9 [label=leaf, shape=ellipse];
                \tstruct0:<f4> -> struct10;
                \tstruct10 [label="<f0> |<f1> 180|<f2> "];
                \tstruct10:<f0> -> struct11;
                \tstruct11 [label=leaf, shape=ellipse];
                \tstruct10:<f2> -> struct12;
                \tstruct12 [label=leaf, shape=ellipse];
                }""", tree.toString());
        assertTrue(tree.validAB());
        tree.insert(95);
        assertEquals("""
                digraph {
                \tnode [shape=record];
                \tstruct0 [label="<f0> |<f1> 109|<f2> |<f3> 172|<f4> "];
                \tstruct0:<f0> -> struct1;
                \tstruct1 [label="<f0> |<f1> 23|<f2> |<f3> 49|<f4> |<f5> 95|<f6> "];
                \tstruct1:<f0> -> struct2;
                \tstruct2 [label=leaf, shape=ellipse];
                \tstruct1:<f2> -> struct3;
                \tstruct3 [label=leaf, shape=ellipse];
                \tstruct1:<f4> -> struct4;
                \tstruct4 [label=leaf, shape=ellipse];
                \tstruct1:<f6> -> struct5;
                \tstruct5 [label=leaf, shape=ellipse];
                \tstruct0:<f2> -> struct6;
                \tstruct6 [label="<f0> |<f1> 120|<f2> |<f3> 130|<f4> |<f5> 163|<f6> "];
                \tstruct6:<f0> -> struct7;
                \tstruct7 [label=leaf, shape=ellipse];
                \tstruct6:<f2> -> struct8;
                \tstruct8 [label=leaf, shape=ellipse];
                \tstruct6:<f4> -> struct9;
                \tstruct9 [label=leaf, shape=ellipse];
                \tstruct6:<f6> -> struct10;
                \tstruct10 [label=leaf, shape=ellipse];
                \tstruct0:<f4> -> struct11;
                \tstruct11 [label="<f0> |<f1> 180|<f2> "];
                \tstruct11:<f0> -> struct12;
                \tstruct12 [label=leaf, shape=ellipse];
                \tstruct11:<f2> -> struct13;
                \tstruct13 [label=leaf, shape=ellipse];
                }""", tree.toString());
        assertTrue(tree.validAB());
        tree.insert(156);
        assertEquals("""
                digraph {
                \tnode [shape=record];
                \tstruct0 [label="<f0> |<f1> 109|<f2> |<f3> 156|<f4> |<f5> 172|<f6> "];
                \tstruct0:<f0> -> struct1;
                \tstruct1 [label="<f0> |<f1> 23|<f2> |<f3> 49|<f4> |<f5> 95|<f6> "];
                \tstruct1:<f0> -> struct2;
                \tstruct2 [label=leaf, shape=ellipse];
                \tstruct1:<f2> -> struct3;
                \tstruct3 [label=leaf, shape=ellipse];
                \tstruct1:<f4> -> struct4;
                \tstruct4 [label=leaf, shape=ellipse];
                \tstruct1:<f6> -> struct5;
                \tstruct5 [label=leaf, shape=ellipse];
                \tstruct0:<f2> -> struct6;
                \tstruct6 [label="<f0> |<f1> 120|<f2> |<f3> 130|<f4> "];
                \tstruct6:<f0> -> struct7;
                \tstruct7 [label=leaf, shape=ellipse];
                \tstruct6:<f2> -> struct8;
                \tstruct8 [label=leaf, shape=ellipse];
                \tstruct6:<f4> -> struct9;
                \tstruct9 [label=leaf, shape=ellipse];
                \tstruct0:<f4> -> struct10;
                \tstruct10 [label="<f0> |<f1> 163|<f2> "];
                \tstruct10:<f0> -> struct11;
                \tstruct11 [label=leaf, shape=ellipse];
                \tstruct10:<f2> -> struct12;
                \tstruct12 [label=leaf, shape=ellipse];
                \tstruct0:<f6> -> struct13;
                \tstruct13 [label="<f0> |<f1> 180|<f2> "];
                \tstruct13:<f0> -> struct14;
                \tstruct14 [label=leaf, shape=ellipse];
                \tstruct13:<f2> -> struct15;
                \tstruct15 [label=leaf, shape=ellipse];
                }""", tree.toString());
        assertTrue(tree.validAB());
        tree.insert(99);
        assertEquals("""
                digraph {
                \tnode [shape=record];
                \tstruct0 [label="<f0> |<f1> 156|<f2> "];
                \tstruct0:<f0> -> struct1;
                \tstruct1 [label="<f0> |<f1> 95|<f2> |<f3> 109|<f4> "];
                \tstruct1:<f0> -> struct2;
                \tstruct2 [label="<f0> |<f1> 23|<f2> |<f3> 49|<f4> "];
                \tstruct2:<f0> -> struct3;
                \tstruct3 [label=leaf, shape=ellipse];
                \tstruct2:<f2> -> struct4;
                \tstruct4 [label=leaf, shape=ellipse];
                \tstruct2:<f4> -> struct5;
                \tstruct5 [label=leaf, shape=ellipse];
                \tstruct1:<f2> -> struct6;
                \tstruct6 [label="<f0> |<f1> 99|<f2> "];
                \tstruct6:<f0> -> struct7;
                \tstruct7 [label=leaf, shape=ellipse];
                \tstruct6:<f2> -> struct8;
                \tstruct8 [label=leaf, shape=ellipse];
                \tstruct1:<f4> -> struct9;
                \tstruct9 [label="<f0> |<f1> 120|<f2> |<f3> 130|<f4> "];
                \tstruct9:<f0> -> struct10;
                \tstruct10 [label=leaf, shape=ellipse];
                \tstruct9:<f2> -> struct11;
                \tstruct11 [label=leaf, shape=ellipse];
                \tstruct9:<f4> -> struct12;
                \tstruct12 [label=leaf, shape=ellipse];
                \tstruct0:<f2> -> struct13;
                \tstruct13 [label="<f0> |<f1> 172|<f2> "];
                \tstruct13:<f0> -> struct14;
                \tstruct14 [label="<f0> |<f1> 163|<f2> "];
                \tstruct14:<f0> -> struct15;
                \tstruct15 [label=leaf, shape=ellipse];
                \tstruct14:<f2> -> struct16;
                \tstruct16 [label=leaf, shape=ellipse];
                \tstruct13:<f2> -> struct17;
                \tstruct17 [label="<f0> |<f1> 180|<f2> "];
                \tstruct17:<f0> -> struct18;
                \tstruct18 [label=leaf, shape=ellipse];
                \tstruct17:<f2> -> struct19;
                \tstruct19 [label=leaf, shape=ellipse];
                }""", tree.toString());
        assertTrue(tree.validAB());
        tree.insert(39);
        assertEquals("""
                digraph {
                \tnode [shape=record];
                \tstruct0 [label="<f0> |<f1> 156|<f2> "];
                \tstruct0:<f0> -> struct1;
                \tstruct1 [label="<f0> |<f1> 95|<f2> |<f3> 109|<f4> "];
                \tstruct1:<f0> -> struct2;
                \tstruct2 [label="<f0> |<f1> 23|<f2> |<f3> 39|<f4> |<f5> 49|<f6> "];
                \tstruct2:<f0> -> struct3;
                \tstruct3 [label=leaf, shape=ellipse];
                \tstruct2:<f2> -> struct4;
                \tstruct4 [label=leaf, shape=ellipse];
                \tstruct2:<f4> -> struct5;
                \tstruct5 [label=leaf, shape=ellipse];
                \tstruct2:<f6> -> struct6;
                \tstruct6 [label=leaf, shape=ellipse];
                \tstruct1:<f2> -> struct7;
                \tstruct7 [label="<f0> |<f1> 99|<f2> "];
                \tstruct7:<f0> -> struct8;
                \tstruct8 [label=leaf, shape=ellipse];
                \tstruct7:<f2> -> struct9;
                \tstruct9 [label=leaf, shape=ellipse];
                \tstruct1:<f4> -> struct10;
                \tstruct10 [label="<f0> |<f1> 120|<f2> |<f3> 130|<f4> "];
                \tstruct10:<f0> -> struct11;
                \tstruct11 [label=leaf, shape=ellipse];
                \tstruct10:<f2> -> struct12;
                \tstruct12 [label=leaf, shape=ellipse];
                \tstruct10:<f4> -> struct13;
                \tstruct13 [label=leaf, shape=ellipse];
                \tstruct0:<f2> -> struct14;
                \tstruct14 [label="<f0> |<f1> 172|<f2> "];
                \tstruct14:<f0> -> struct15;
                \tstruct15 [label="<f0> |<f1> 163|<f2> "];
                \tstruct15:<f0> -> struct16;
                \tstruct16 [label=leaf, shape=ellipse];
                \tstruct15:<f2> -> struct17;
                \tstruct17 [label=leaf, shape=ellipse];
                \tstruct14:<f2> -> struct18;
                \tstruct18 [label="<f0> |<f1> 180|<f2> "];
                \tstruct18:<f0> -> struct19;
                \tstruct19 [label=leaf, shape=ellipse];
                \tstruct18:<f2> -> struct20;
                \tstruct20 [label=leaf, shape=ellipse];
                }""", tree.toString());
        assertTrue(tree.validAB());
        tree.insert(178);
        assertEquals("""
                digraph {
                \tnode [shape=record];
                \tstruct0 [label="<f0> |<f1> 156|<f2> "];
                \tstruct0:<f0> -> struct1;
                \tstruct1 [label="<f0> |<f1> 95|<f2> |<f3> 109|<f4> "];
                \tstruct1:<f0> -> struct2;
                \tstruct2 [label="<f0> |<f1> 23|<f2> |<f3> 39|<f4> |<f5> 49|<f6> "];
                \tstruct2:<f0> -> struct3;
                \tstruct3 [label=leaf, shape=ellipse];
                \tstruct2:<f2> -> struct4;
                \tstruct4 [label=leaf, shape=ellipse];
                \tstruct2:<f4> -> struct5;
                \tstruct5 [label=leaf, shape=ellipse];
                \tstruct2:<f6> -> struct6;
                \tstruct6 [label=leaf, shape=ellipse];
                \tstruct1:<f2> -> struct7;
                \tstruct7 [label="<f0> |<f1> 99|<f2> "];
                \tstruct7:<f0> -> struct8;
                \tstruct8 [label=leaf, shape=ellipse];
                \tstruct7:<f2> -> struct9;
                \tstruct9 [label=leaf, shape=ellipse];
                \tstruct1:<f4> -> struct10;
                \tstruct10 [label="<f0> |<f1> 120|<f2> |<f3> 130|<f4> "];
                \tstruct10:<f0> -> struct11;
                \tstruct11 [label=leaf, shape=ellipse];
                \tstruct10:<f2> -> struct12;
                \tstruct12 [label=leaf, shape=ellipse];
                \tstruct10:<f4> -> struct13;
                \tstruct13 [label=leaf, shape=ellipse];
                \tstruct0:<f2> -> struct14;
                \tstruct14 [label="<f0> |<f1> 172|<f2> "];
                \tstruct14:<f0> -> struct15;
                \tstruct15 [label="<f0> |<f1> 163|<f2> "];
                \tstruct15:<f0> -> struct16;
                \tstruct16 [label=leaf, shape=ellipse];
                \tstruct15:<f2> -> struct17;
                \tstruct17 [label=leaf, shape=ellipse];
                \tstruct14:<f2> -> struct18;
                \tstruct18 [label="<f0> |<f1> 178|<f2> |<f3> 180|<f4> "];
                \tstruct18:<f0> -> struct19;
                \tstruct19 [label=leaf, shape=ellipse];
                \tstruct18:<f2> -> struct20;
                \tstruct20 [label=leaf, shape=ellipse];
                \tstruct18:<f4> -> struct21;
                \tstruct21 [label=leaf, shape=ellipse];
                }""", tree.toString());
        assertTrue(tree.validAB());
        tree.insert(197);
        assertEquals("""
                digraph {
                \tnode [shape=record];
                \tstruct0 [label="<f0> |<f1> 156|<f2> "];
                \tstruct0:<f0> -> struct1;
                \tstruct1 [label="<f0> |<f1> 95|<f2> |<f3> 109|<f4> "];
                \tstruct1:<f0> -> struct2;
                \tstruct2 [label="<f0> |<f1> 23|<f2> |<f3> 39|<f4> |<f5> 49|<f6> "];
                \tstruct2:<f0> -> struct3;
                \tstruct3 [label=leaf, shape=ellipse];
                \tstruct2:<f2> -> struct4;
                \tstruct4 [label=leaf, shape=ellipse];
                \tstruct2:<f4> -> struct5;
                \tstruct5 [label=leaf, shape=ellipse];
                \tstruct2:<f6> -> struct6;
                \tstruct6 [label=leaf, shape=ellipse];
                \tstruct1:<f2> -> struct7;
                \tstruct7 [label="<f0> |<f1> 99|<f2> "];
                \tstruct7:<f0> -> struct8;
                \tstruct8 [label=leaf, shape=ellipse];
                \tstruct7:<f2> -> struct9;
                \tstruct9 [label=leaf, shape=ellipse];
                \tstruct1:<f4> -> struct10;
                \tstruct10 [label="<f0> |<f1> 120|<f2> |<f3> 130|<f4> "];
                \tstruct10:<f0> -> struct11;
                \tstruct11 [label=leaf, shape=ellipse];
                \tstruct10:<f2> -> struct12;
                \tstruct12 [label=leaf, shape=ellipse];
                \tstruct10:<f4> -> struct13;
                \tstruct13 [label=leaf, shape=ellipse];
                \tstruct0:<f2> -> struct14;
                \tstruct14 [label="<f0> |<f1> 172|<f2> "];
                \tstruct14:<f0> -> struct15;
                \tstruct15 [label="<f0> |<f1> 163|<f2> "];
                \tstruct15:<f0> -> struct16;
                \tstruct16 [label=leaf, shape=ellipse];
                \tstruct15:<f2> -> struct17;
                \tstruct17 [label=leaf, shape=ellipse];
                \tstruct14:<f2> -> struct18;
                \tstruct18 [label="<f0> |<f1> 178|<f2> |<f3> 180|<f4> |<f5> 197|<f6> "];
                \tstruct18:<f0> -> struct19;
                \tstruct19 [label=leaf, shape=ellipse];
                \tstruct18:<f2> -> struct20;
                \tstruct20 [label=leaf, shape=ellipse];
                \tstruct18:<f4> -> struct21;
                \tstruct21 [label=leaf, shape=ellipse];
                \tstruct18:<f6> -> struct22;
                \tstruct22 [label=leaf, shape=ellipse];
                }""", tree.toString());
        assertTrue(tree.validAB());
        tree.insert(71);
        assertEquals("""
                digraph {
                \tnode [shape=record];
                \tstruct0 [label="<f0> |<f1> 156|<f2> "];
                \tstruct0:<f0> -> struct1;
                \tstruct1 [label="<f0> |<f1> 49|<f2> |<f3> 95|<f4> |<f5> 109|<f6> "];
                \tstruct1:<f0> -> struct2;
                \tstruct2 [label="<f0> |<f1> 23|<f2> |<f3> 39|<f4> "];
                \tstruct2:<f0> -> struct3;
                \tstruct3 [label=leaf, shape=ellipse];
                \tstruct2:<f2> -> struct4;
                \tstruct4 [label=leaf, shape=ellipse];
                \tstruct2:<f4> -> struct5;
                \tstruct5 [label=leaf, shape=ellipse];
                \tstruct1:<f2> -> struct6;
                \tstruct6 [label="<f0> |<f1> 71|<f2> "];
                \tstruct6:<f0> -> struct7;
                \tstruct7 [label=leaf, shape=ellipse];
                \tstruct6:<f2> -> struct8;
                \tstruct8 [label=leaf, shape=ellipse];
                \tstruct1:<f4> -> struct9;
                \tstruct9 [label="<f0> |<f1> 99|<f2> "];
                \tstruct9:<f0> -> struct10;
                \tstruct10 [label=leaf, shape=ellipse];
                \tstruct9:<f2> -> struct11;
                \tstruct11 [label=leaf, shape=ellipse];
                \tstruct1:<f6> -> struct12;
                \tstruct12 [label="<f0> |<f1> 120|<f2> |<f3> 130|<f4> "];
                \tstruct12:<f0> -> struct13;
                \tstruct13 [label=leaf, shape=ellipse];
                \tstruct12:<f2> -> struct14;
                \tstruct14 [label=leaf, shape=ellipse];
                \tstruct12:<f4> -> struct15;
                \tstruct15 [label=leaf, shape=ellipse];
                \tstruct0:<f2> -> struct16;
                \tstruct16 [label="<f0> |<f1> 172|<f2> "];
                \tstruct16:<f0> -> struct17;
                \tstruct17 [label="<f0> |<f1> 163|<f2> "];
                \tstruct17:<f0> -> struct18;
                \tstruct18 [label=leaf, shape=ellipse];
                \tstruct17:<f2> -> struct19;
                \tstruct19 [label=leaf, shape=ellipse];
                \tstruct16:<f2> -> struct20;
                \tstruct20 [label="<f0> |<f1> 178|<f2> |<f3> 180|<f4> |<f5> 197|<f6> "];
                \tstruct20:<f0> -> struct21;
                \tstruct21 [label=leaf, shape=ellipse];
                \tstruct20:<f2> -> struct22;
                \tstruct22 [label=leaf, shape=ellipse];
                \tstruct20:<f4> -> struct23;
                \tstruct23 [label=leaf, shape=ellipse];
                \tstruct20:<f6> -> struct24;
                \tstruct24 [label=leaf, shape=ellipse];
                }""", tree.toString());
        assertTrue(tree.validAB());
        tree.insert(194);
        assertEquals("""
                digraph {
                \tnode [shape=record];
                \tstruct0 [label="<f0> |<f1> 156|<f2> "];
                \tstruct0:<f0> -> struct1;
                \tstruct1 [label="<f0> |<f1> 49|<f2> |<f3> 95|<f4> |<f5> 109|<f6> "];
                \tstruct1:<f0> -> struct2;
                \tstruct2 [label="<f0> |<f1> 23|<f2> |<f3> 39|<f4> "];
                \tstruct2:<f0> -> struct3;
                \tstruct3 [label=leaf, shape=ellipse];
                \tstruct2:<f2> -> struct4;
                \tstruct4 [label=leaf, shape=ellipse];
                \tstruct2:<f4> -> struct5;
                \tstruct5 [label=leaf, shape=ellipse];
                \tstruct1:<f2> -> struct6;
                \tstruct6 [label="<f0> |<f1> 71|<f2> "];
                \tstruct6:<f0> -> struct7;
                \tstruct7 [label=leaf, shape=ellipse];
                \tstruct6:<f2> -> struct8;
                \tstruct8 [label=leaf, shape=ellipse];
                \tstruct1:<f4> -> struct9;
                \tstruct9 [label="<f0> |<f1> 99|<f2> "];
                \tstruct9:<f0> -> struct10;
                \tstruct10 [label=leaf, shape=ellipse];
                \tstruct9:<f2> -> struct11;
                \tstruct11 [label=leaf, shape=ellipse];
                \tstruct1:<f6> -> struct12;
                \tstruct12 [label="<f0> |<f1> 120|<f2> |<f3> 130|<f4> "];
                \tstruct12:<f0> -> struct13;
                \tstruct13 [label=leaf, shape=ellipse];
                \tstruct12:<f2> -> struct14;
                \tstruct14 [label=leaf, shape=ellipse];
                \tstruct12:<f4> -> struct15;
                \tstruct15 [label=leaf, shape=ellipse];
                \tstruct0:<f2> -> struct16;
                \tstruct16 [label="<f0> |<f1> 172|<f2> |<f3> 194|<f4> "];
                \tstruct16:<f0> -> struct17;
                \tstruct17 [label="<f0> |<f1> 163|<f2> "];
                \tstruct17:<f0> -> struct18;
                \tstruct18 [label=leaf, shape=ellipse];
                \tstruct17:<f2> -> struct19;
                \tstruct19 [label=leaf, shape=ellipse];
                \tstruct16:<f2> -> struct20;
                \tstruct20 [label="<f0> |<f1> 178|<f2> |<f3> 180|<f4> "];
                \tstruct20:<f0> -> struct21;
                \tstruct21 [label=leaf, shape=ellipse];
                \tstruct20:<f2> -> struct22;
                \tstruct22 [label=leaf, shape=ellipse];
                \tstruct20:<f4> -> struct23;
                \tstruct23 [label=leaf, shape=ellipse];
                \tstruct16:<f4> -> struct24;
                \tstruct24 [label="<f0> |<f1> 197|<f2> "];
                \tstruct24:<f0> -> struct25;
                \tstruct25 [label=leaf, shape=ellipse];
                \tstruct24:<f2> -> struct26;
                \tstruct26 [label=leaf, shape=ellipse];
                }""", tree.toString());
        assertTrue(tree.validAB());
        tree.insert(118);
        assertEquals("""
                digraph {
                \tnode [shape=record];
                \tstruct0 [label="<f0> |<f1> 156|<f2> "];
                \tstruct0:<f0> -> struct1;
                \tstruct1 [label="<f0> |<f1> 49|<f2> |<f3> 95|<f4> |<f5> 109|<f6> "];
                \tstruct1:<f0> -> struct2;
                \tstruct2 [label="<f0> |<f1> 23|<f2> |<f3> 39|<f4> "];
                \tstruct2:<f0> -> struct3;
                \tstruct3 [label=leaf, shape=ellipse];
                \tstruct2:<f2> -> struct4;
                \tstruct4 [label=leaf, shape=ellipse];
                \tstruct2:<f4> -> struct5;
                \tstruct5 [label=leaf, shape=ellipse];
                \tstruct1:<f2> -> struct6;
                \tstruct6 [label="<f0> |<f1> 71|<f2> "];
                \tstruct6:<f0> -> struct7;
                \tstruct7 [label=leaf, shape=ellipse];
                \tstruct6:<f2> -> struct8;
                \tstruct8 [label=leaf, shape=ellipse];
                \tstruct1:<f4> -> struct9;
                \tstruct9 [label="<f0> |<f1> 99|<f2> "];
                \tstruct9:<f0> -> struct10;
                \tstruct10 [label=leaf, shape=ellipse];
                \tstruct9:<f2> -> struct11;
                \tstruct11 [label=leaf, shape=ellipse];
                \tstruct1:<f6> -> struct12;
                \tstruct12 [label="<f0> |<f1> 118|<f2> |<f3> 120|<f4> |<f5> 130|<f6> "];
                \tstruct12:<f0> -> struct13;
                \tstruct13 [label=leaf, shape=ellipse];
                \tstruct12:<f2> -> struct14;
                \tstruct14 [label=leaf, shape=ellipse];
                \tstruct12:<f4> -> struct15;
                \tstruct15 [label=leaf, shape=ellipse];
                \tstruct12:<f6> -> struct16;
                \tstruct16 [label=leaf, shape=ellipse];
                \tstruct0:<f2> -> struct17;
                \tstruct17 [label="<f0> |<f1> 172|<f2> |<f3> 194|<f4> "];
                \tstruct17:<f0> -> struct18;
                \tstruct18 [label="<f0> |<f1> 163|<f2> "];
                \tstruct18:<f0> -> struct19;
                \tstruct19 [label=leaf, shape=ellipse];
                \tstruct18:<f2> -> struct20;
                \tstruct20 [label=leaf, shape=ellipse];
                \tstruct17:<f2> -> struct21;
                \tstruct21 [label="<f0> |<f1> 178|<f2> |<f3> 180|<f4> "];
                \tstruct21:<f0> -> struct22;
                \tstruct22 [label=leaf, shape=ellipse];
                \tstruct21:<f2> -> struct23;
                \tstruct23 [label=leaf, shape=ellipse];
                \tstruct21:<f4> -> struct24;
                \tstruct24 [label=leaf, shape=ellipse];
                \tstruct17:<f4> -> struct25;
                \tstruct25 [label="<f0> |<f1> 197|<f2> "];
                \tstruct25:<f0> -> struct26;
                \tstruct26 [label=leaf, shape=ellipse];
                \tstruct25:<f2> -> struct27;
                \tstruct27 [label=leaf, shape=ellipse];
                }""", tree.toString());
        assertTrue(tree.validAB());
        tree.insert(88);
        assertEquals("""
                digraph {
                \tnode [shape=record];
                \tstruct0 [label="<f0> |<f1> 156|<f2> "];
                \tstruct0:<f0> -> struct1;
                \tstruct1 [label="<f0> |<f1> 49|<f2> |<f3> 95|<f4> |<f5> 109|<f6> "];
                \tstruct1:<f0> -> struct2;
                \tstruct2 [label="<f0> |<f1> 23|<f2> |<f3> 39|<f4> "];
                \tstruct2:<f0> -> struct3;
                \tstruct3 [label=leaf, shape=ellipse];
                \tstruct2:<f2> -> struct4;
                \tstruct4 [label=leaf, shape=ellipse];
                \tstruct2:<f4> -> struct5;
                \tstruct5 [label=leaf, shape=ellipse];
                \tstruct1:<f2> -> struct6;
                \tstruct6 [label="<f0> |<f1> 71|<f2> |<f3> 88|<f4> "];
                \tstruct6:<f0> -> struct7;
                \tstruct7 [label=leaf, shape=ellipse];
                \tstruct6:<f2> -> struct8;
                \tstruct8 [label=leaf, shape=ellipse];
                \tstruct6:<f4> -> struct9;
                \tstruct9 [label=leaf, shape=ellipse];
                \tstruct1:<f4> -> struct10;
                \tstruct10 [label="<f0> |<f1> 99|<f2> "];
                \tstruct10:<f0> -> struct11;
                \tstruct11 [label=leaf, shape=ellipse];
                \tstruct10:<f2> -> struct12;
                \tstruct12 [label=leaf, shape=ellipse];
                \tstruct1:<f6> -> struct13;
                \tstruct13 [label="<f0> |<f1> 118|<f2> |<f3> 120|<f4> |<f5> 130|<f6> "];
                \tstruct13:<f0> -> struct14;
                \tstruct14 [label=leaf, shape=ellipse];
                \tstruct13:<f2> -> struct15;
                \tstruct15 [label=leaf, shape=ellipse];
                \tstruct13:<f4> -> struct16;
                \tstruct16 [label=leaf, shape=ellipse];
                \tstruct13:<f6> -> struct17;
                \tstruct17 [label=leaf, shape=ellipse];
                \tstruct0:<f2> -> struct18;
                \tstruct18 [label="<f0> |<f1> 172|<f2> |<f3> 194|<f4> "];
                \tstruct18:<f0> -> struct19;
                \tstruct19 [label="<f0> |<f1> 163|<f2> "];
                \tstruct19:<f0> -> struct20;
                \tstruct20 [label=leaf, shape=ellipse];
                \tstruct19:<f2> -> struct21;
                \tstruct21 [label=leaf, shape=ellipse];
                \tstruct18:<f2> -> struct22;
                \tstruct22 [label="<f0> |<f1> 178|<f2> |<f3> 180|<f4> "];
                \tstruct22:<f0> -> struct23;
                \tstruct23 [label=leaf, shape=ellipse];
                \tstruct22:<f2> -> struct24;
                \tstruct24 [label=leaf, shape=ellipse];
                \tstruct22:<f4> -> struct25;
                \tstruct25 [label=leaf, shape=ellipse];
                \tstruct18:<f4> -> struct26;
                \tstruct26 [label="<f0> |<f1> 197|<f2> "];
                \tstruct26:<f0> -> struct27;
                \tstruct27 [label=leaf, shape=ellipse];
                \tstruct26:<f2> -> struct28;
                \tstruct28 [label=leaf, shape=ellipse];
                }""", tree.toString());
        assertTrue(tree.validAB());

        //Ab hier wird gelöscht !!!

        /*<!> Ab hier sind die Formatierungen wahrscheinlich fehlerhaft. Die Digraphen sollten davon abgesehen dennoch
         stimmen <!>*/

        tree.remove(95);
        assertEquals("""
                digraph {
                    node [shape=record];
                    struct0 [label="<f0> |<f1> 156|<f2> "];
                    struct0:<f0> -> struct1;
                    struct1 [label="<f0> |<f1> 49|<f2> |<f3> 88|<f4> |<f5> 109|<f6> "];
                    struct1:<f0> -> struct2;
                    struct2 [label="<f0> |<f1> 23|<f2> |<f3> 39|<f4> "];
                    struct2:<f0> -> struct3;
                    struct3 [label=leaf, shape=ellipse];
                    struct2:<f2> -> struct4;
                    struct4 [label=leaf, shape=ellipse];
                    struct2:<f4> -> struct5;
                    struct5 [label=leaf, shape=ellipse];
                    struct1:<f2> -> struct6;
                    struct6 [label="<f0> |<f1> 71|<f2> "];
                    struct6:<f0> -> struct7;
                    struct7 [label=leaf, shape=ellipse];
                    struct6:<f2> -> struct8;
                    struct8 [label=leaf, shape=ellipse];
                    struct1:<f4> -> struct9;
                    struct9 [label="<f0> |<f1> 99|<f2> "];
                    struct9:<f0> -> struct10;
                    struct10 [label=leaf, shape=ellipse];
                    struct9:<f2> -> struct11;
                    struct11 [label=leaf, shape=ellipse];
                    struct1:<f6> -> struct12;
                    struct12 [label="<f0> |<f1> 118|<f2> |<f3> 120|<f4> |<f5> 130|<f6> "];
                    struct12:<f0> -> struct13;
                    struct13 [label=leaf, shape=ellipse];
                    struct12:<f2> -> struct14;
                    struct14 [label=leaf, shape=ellipse];
                    struct12:<f4> -> struct15;
                    struct15 [label=leaf, shape=ellipse];
                    struct12:<f6> -> struct16;
                    struct16 [label=leaf, shape=ellipse];
                    struct0:<f2> -> struct17;
                    struct17 [label="<f0> |<f1> 172|<f2> |<f3> 194|<f4> "];
                    struct17:<f0> -> struct18;
                    struct18 [label="<f0> |<f1> 163|<f2> "];
                    struct18:<f0> -> struct19;
                    struct19 [label=leaf, shape=ellipse];
                    struct18:<f2> -> struct20;
                    struct20 [label=leaf, shape=ellipse];
                    struct17:<f2> -> struct21;
                    struct21 [label="<f0> |<f1> 178|<f2> |<f3> 180|<f4> "];
                    struct21:<f0> -> struct22;
                    struct22 [label=leaf, shape=ellipse];
                    struct21:<f2> -> struct23;
                    struct23 [label=leaf, shape=ellipse];
                    struct21:<f4> -> struct24;
                    struct24 [label=leaf, shape=ellipse];
                    struct17:<f4> -> struct25;
                    struct25 [label="<f0> |<f1> 197|<f2> "];
                    struct25:<f0> -> struct26;
                    struct26 [label=leaf, shape=ellipse];
                    struct25:<f2> -> struct27;
                    struct27 [label=leaf, shape=ellipse];
                }
                """, tree.toString());
        assertTrue(tree.validAB());
        tree.remove(194);
        assertEquals("""
                digraph {
                    node [shape=record];
                    struct0 [label="<f0> |<f1> 156|<f2> "];
                    struct0:<f0> -> struct1;
                    struct1 [label="<f0> |<f1> 49|<f2> |<f3> 88|<f4> |<f5> 109|<f6> "];
                    struct1:<f0> -> struct2;
                    struct2 [label="<f0> |<f1> 23|<f2> |<f3> 39|<f4> "];
                    struct2:<f0> -> struct3;
                    struct3 [label=leaf, shape=ellipse];
                    struct2:<f2> -> struct4;
                    struct4 [label=leaf, shape=ellipse];
                    struct2:<f4> -> struct5;
                    struct5 [label=leaf, shape=ellipse];
                    struct1:<f2> -> struct6;
                    struct6 [label="<f0> |<f1> 71|<f2> "];
                    struct6:<f0> -> struct7;
                    struct7 [label=leaf, shape=ellipse];
                    struct6:<f2> -> struct8;
                    struct8 [label=leaf, shape=ellipse];
                    struct1:<f4> -> struct9;
                    struct9 [label="<f0> |<f1> 99|<f2> "];
                    struct9:<f0> -> struct10;
                    struct10 [label=leaf, shape=ellipse];
                    struct9:<f2> -> struct11;
                    struct11 [label=leaf, shape=ellipse];
                    struct1:<f6> -> struct12;
                    struct12 [label="<f0> |<f1> 118|<f2> |<f3> 120|<f4> |<f5> 130|<f6> "];
                    struct12:<f0> -> struct13;
                    struct13 [label=leaf, shape=ellipse];
                    struct12:<f2> -> struct14;
                    struct14 [label=leaf, shape=ellipse];
                    struct12:<f4> -> struct15;
                    struct15 [label=leaf, shape=ellipse];
                    struct12:<f6> -> struct16;
                    struct16 [label=leaf, shape=ellipse];
                    struct0:<f2> -> struct17;
                    struct17 [label="<f0> |<f1> 172|<f2> |<f3> 180|<f4> "];
                    struct17:<f0> -> struct18;
                    struct18 [label="<f0> |<f1> 163|<f2> "];
                    struct18:<f0> -> struct19;
                    struct19 [label=leaf, shape=ellipse];
                    struct18:<f2> -> struct20;
                    struct20 [label=leaf, shape=ellipse];
                    struct17:<f2> -> struct21;
                    struct21 [label="<f0> |<f1> 178|<f2> "];
                    struct21:<f0> -> struct22;
                    struct22 [label=leaf, shape=ellipse];
                    struct21:<f2> -> struct23;
                    struct23 [label=leaf, shape=ellipse];
                    struct17:<f4> -> struct24;
                    struct24 [label="<f0> |<f1> 197|<f2> "];
                    struct24:<f0> -> struct25;
                    struct25 [label=leaf, shape=ellipse];
                    struct24:<f2> -> struct26;
                    struct26 [label=leaf, shape=ellipse];
                }
                """, tree.toString());
        assertTrue(tree.validAB());
        tree.remove(23);
        assertEquals("""
                digraph {
                    node [shape=record];
                    struct0 [label="<f0> |<f1> 156|<f2> "];
                    struct0:<f0> -> struct1;
                    struct1 [label="<f0> |<f1> 49|<f2> |<f3> 88|<f4> |<f5> 109|<f6> "];
                    struct1:<f0> -> struct2;
                    struct2 [label="<f0> |<f1> 39|<f2> "];
                    struct2:<f0> -> struct3;
                    struct3 [label=leaf, shape=ellipse];
                    struct2:<f2> -> struct4;
                    struct4 [label=leaf, shape=ellipse];
                    struct1:<f2> -> struct5;
                    struct5 [label="<f0> |<f1> 71|<f2> "];
                    struct5:<f0> -> struct6;
                    struct6 [label=leaf, shape=ellipse];
                    struct5:<f2> -> struct7;
                    struct7 [label=leaf, shape=ellipse];
                    struct1:<f4> -> struct8;
                    struct8 [label="<f0> |<f1> 99|<f2> "];
                    struct8:<f0> -> struct9;
                    struct9 [label=leaf, shape=ellipse];
                    struct8:<f2> -> struct10;
                    struct10 [label=leaf, shape=ellipse];
                    struct1:<f6> -> struct11;
                    struct11 [label="<f0> |<f1> 118|<f2> |<f3> 120|<f4> |<f5> 130|<f6> "];
                    struct11:<f0> -> struct12;
                    struct12 [label=leaf, shape=ellipse];
                    struct11:<f2> -> struct13;
                    struct13 [label=leaf, shape=ellipse];
                    struct11:<f4> -> struct14;
                    struct14 [label=leaf, shape=ellipse];
                    struct11:<f6> -> struct15;
                    struct15 [label=leaf, shape=ellipse];
                    struct0:<f2> -> struct16;
                    struct16 [label="<f0> |<f1> 172|<f2> |<f3> 180|<f4> "];
                    struct16:<f0> -> struct17;
                    struct17 [label="<f0> |<f1> 163|<f2> "];
                    struct17:<f0> -> struct18;
                    struct18 [label=leaf, shape=ellipse];
                    struct17:<f2> -> struct19;
                    struct19 [label=leaf, shape=ellipse];
                    struct16:<f2> -> struct20;
                    struct20 [label="<f0> |<f1> 178|<f2> "];
                    struct20:<f0> -> struct21;
                    struct21 [label=leaf, shape=ellipse];
                    struct20:<f2> -> struct22;
                    struct22 [label=leaf, shape=ellipse];
                    struct16:<f4> -> struct23;
                    struct23 [label="<f0> |<f1> 197|<f2> "];
                    struct23:<f0> -> struct24;
                    struct24 [label=leaf, shape=ellipse];
                    struct23:<f2> -> struct25;
                    struct25 [label=leaf, shape=ellipse];
                }
                """, tree.toString());
        assertTrue(tree.validAB());
        tree.remove(118);
        assertEquals("""
                digraph {
                    node [shape=record];
                    struct0 [label="<f0> |<f1> 156|<f2> "];
                    struct0:<f0> -> struct1;
                    struct1 [label="<f0> |<f1> 49|<f2> |<f3> 88|<f4> |<f5> 109|<f6> "];
                    struct1:<f0> -> struct2;
                    struct2 [label="<f0> |<f1> 39|<f2> "];
                    struct2:<f0> -> struct3;
                    struct3 [label=leaf, shape=ellipse];
                    struct2:<f2> -> struct4;
                    struct4 [label=leaf, shape=ellipse];
                    struct1:<f2> -> struct5;
                    struct5 [label="<f0> |<f1> 71|<f2> "];
                    struct5:<f0> -> struct6;
                    struct6 [label=leaf, shape=ellipse];
                    struct5:<f2> -> struct7;
                    struct7 [label=leaf, shape=ellipse];
                    struct1:<f4> -> struct8;
                    struct8 [label="<f0> |<f1> 99|<f2> "];
                    struct8:<f0> -> struct9;
                    struct9 [label=leaf, shape=ellipse];
                    struct8:<f2> -> struct10;
                    struct10 [label=leaf, shape=ellipse];
                    struct1:<f6> -> struct11;
                    struct11 [label="<f0> |<f1> 120|<f2> |<f3> 130|<f4> "];
                    struct11:<f0> -> struct12;
                    struct12 [label=leaf, shape=ellipse];
                    struct11:<f2> -> struct13;
                    struct13 [label=leaf, shape=ellipse];
                    struct11:<f4> -> struct14;
                    struct14 [label=leaf, shape=ellipse];
                    struct0:<f2> -> struct15;
                    struct15 [label="<f0> |<f1> 172|<f2> |<f3> 180|<f4> "];
                    struct15:<f0> -> struct16;
                    struct16 [label="<f0> |<f1> 163|<f2> "];
                    struct16:<f0> -> struct17;
                    struct17 [label=leaf, shape=ellipse];
                    struct16:<f2> -> struct18;
                    struct18 [label=leaf, shape=ellipse];
                    struct15:<f2> -> struct19;
                    struct19 [label="<f0> |<f1> 178|<f2> "];
                    struct19:<f0> -> struct20;
                    struct20 [label=leaf, shape=ellipse];
                    struct19:<f2> -> struct21;
                    struct21 [label=leaf, shape=ellipse];
                    struct15:<f4> -> struct22;
                    struct22 [label="<f0> |<f1> 197|<f2> "];
                    struct22:<f0> -> struct23;
                    struct23 [label=leaf, shape=ellipse];
                    struct22:<f2> -> struct24;
                    struct24 [label=leaf, shape=ellipse];
                }
                """, tree.toString());
        assertTrue(tree.validAB());
        tree.remove(109);
        assertEquals("""
                digraph {
                    node [shape=record];
                    struct0 [label="<f0> |<f1> 156|<f2> "];
                    struct0:<f0> -> struct1;
                    struct1 [label="<f0> |<f1> 49|<f2> |<f3> 88|<f4> |<f5> 120|<f6> "];
                    struct1:<f0> -> struct2;
                    struct2 [label="<f0> |<f1> 39|<f2> "];
                    struct2:<f0> -> struct3;
                    struct3 [label=leaf, shape=ellipse];
                    struct2:<f2> -> struct4;
                    struct4 [label=leaf, shape=ellipse];
                    struct1:<f2> -> struct5;
                    struct5 [label="<f0> |<f1> 71|<f2> "];
                    struct5:<f0> -> struct6;
                    struct6 [label=leaf, shape=ellipse];
                    struct5:<f2> -> struct7;
                    struct7 [label=leaf, shape=ellipse];
                    struct1:<f4> -> struct8;
                    struct8 [label="<f0> |<f1> 99|<f2> "];
                    struct8:<f0> -> struct9;
                    struct9 [label=leaf, shape=ellipse];
                    struct8:<f2> -> struct10;
                    struct10 [label=leaf, shape=ellipse];
                    struct1:<f6> -> struct11;
                    struct11 [label="<f0> |<f1> 130|<f2> "];
                    struct11:<f0> -> struct12;
                    struct12 [label=leaf, shape=ellipse];
                    struct11:<f2> -> struct13;
                    struct13 [label=leaf, shape=ellipse];
                    struct0:<f2> -> struct14;
                    struct14 [label="<f0> |<f1> 172|<f2> |<f3> 180|<f4> "];
                    struct14:<f0> -> struct15;
                    struct15 [label="<f0> |<f1> 163|<f2> "];
                    struct15:<f0> -> struct16;
                    struct16 [label=leaf, shape=ellipse];
                    struct15:<f2> -> struct17;
                    struct17 [label=leaf, shape=ellipse];
                    struct14:<f2> -> struct18;
                    struct18 [label="<f0> |<f1> 178|<f2> "];
                    struct18:<f0> -> struct19;
                    struct19 [label=leaf, shape=ellipse];
                    struct18:<f2> -> struct20;
                    struct20 [label=leaf, shape=ellipse];
                    struct14:<f4> -> struct21;
                    struct21 [label="<f0> |<f1> 197|<f2> "];
                    struct21:<f0> -> struct22;
                    struct22 [label=leaf, shape=ellipse];
                    struct21:<f2> -> struct23;
                    struct23 [label=leaf, shape=ellipse];
                }
                """, tree.toString());
        assertTrue(tree.validAB());
        tree.remove(178);
        assertEquals("""
                digraph {
                    node [shape=record];
                    struct0 [label="<f0> |<f1> 156|<f2> "];
                    struct0:<f0> -> struct1;
                    struct1 [label="<f0> |<f1> 49|<f2> |<f3> 88|<f4> |<f5> 120|<f6> "];
                    struct1:<f0> -> struct2;
                    struct2 [label="<f0> |<f1> 39|<f2> "];
                    struct2:<f0> -> struct3;
                    struct3 [label=leaf, shape=ellipse];
                    struct2:<f2> -> struct4;
                    struct4 [label=leaf, shape=ellipse];
                    struct1:<f2> -> struct5;
                    struct5 [label="<f0> |<f1> 71|<f2> "];
                    struct5:<f0> -> struct6;
                    struct6 [label=leaf, shape=ellipse];
                    struct5:<f2> -> struct7;
                    struct7 [label=leaf, shape=ellipse];
                    struct1:<f4> -> struct8;
                    struct8 [label="<f0> |<f1> 99|<f2> "];
                    struct8:<f0> -> struct9;
                    struct9 [label=leaf, shape=ellipse];
                    struct8:<f2> -> struct10;
                    struct10 [label=leaf, shape=ellipse];
                    struct1:<f6> -> struct11;
                    struct11 [label="<f0> |<f1> 130|<f2> "];
                    struct11:<f0> -> struct12;
                    struct12 [label=leaf, shape=ellipse];
                    struct11:<f2> -> struct13;
                    struct13 [label=leaf, shape=ellipse];
                    struct0:<f2> -> struct14;
                    struct14 [label="<f0> |<f1> 172|<f2> "];
                    struct14:<f0> -> struct15;
                    struct15 [label="<f0> |<f1> 163|<f2> "];
                    struct15:<f0> -> struct16;
                    struct16 [label=leaf, shape=ellipse];
                    struct15:<f2> -> struct17;
                    struct17 [label=leaf, shape=ellipse];
                    struct14:<f2> -> struct18;
                    struct18 [label="<f0> |<f1> 180|<f2> |<f3> 197|<f4> "];
                    struct18:<f0> -> struct19;
                    struct19 [label=leaf, shape=ellipse];
                    struct18:<f2> -> struct20;
                    struct20 [label=leaf, shape=ellipse];
                    struct18:<f4> -> struct21;
                    struct21 [label=leaf, shape=ellipse];
                }
                """, tree.toString());
        assertTrue(tree.validAB());
        tree.remove(71);
        assertEquals("""
                digraph {
                    node [shape=record];
                    struct0 [label="<f0> |<f1> 156|<f2> "];
                    struct0:<f0> -> struct1;
                    struct1 [label="<f0> |<f1> 49|<f2> |<f3> 120|<f4> "];
                    struct1:<f0> -> struct2;
                    struct2 [label="<f0> |<f1> 39|<f2> "];
                    struct2:<f0> -> struct3;
                    struct3 [label=leaf, shape=ellipse];
                    struct2:<f2> -> struct4;
                    struct4 [label=leaf, shape=ellipse];
                    struct1:<f2> -> struct5;
                    struct5 [label="<f0> |<f1> 88|<f2> |<f3> 99|<f4> "];
                    struct5:<f0> -> struct6;
                    struct6 [label=leaf, shape=ellipse];
                    struct5:<f2> -> struct7;
                    struct7 [label=leaf, shape=ellipse];
                    struct5:<f4> -> struct8;
                    struct8 [label=leaf, shape=ellipse];
                    struct1:<f4> -> struct9;
                    struct9 [label="<f0> |<f1> 130|<f2> "];
                    struct9:<f0> -> struct10;
                    struct10 [label=leaf, shape=ellipse];
                    struct9:<f2> -> struct11;
                    struct11 [label=leaf, shape=ellipse];
                    struct0:<f2> -> struct12;
                    struct12 [label="<f0> |<f1> 172|<f2> "];
                    struct12:<f0> -> struct13;
                    struct13 [label="<f0> |<f1> 163|<f2> "];
                    struct13:<f0> -> struct14;
                    struct14 [label=leaf, shape=ellipse];
                    struct13:<f2> -> struct15;
                    struct15 [label=leaf, shape=ellipse];
                    struct12:<f2> -> struct16;
                    struct16 [label="<f0> |<f1> 180|<f2> |<f3> 197|<f4> "];
                    struct16:<f0> -> struct17;
                    struct17 [label=leaf, shape=ellipse];
                    struct16:<f2> -> struct18;
                    struct18 [label=leaf, shape=ellipse];
                    struct16:<f4> -> struct19;
                    struct19 [label=leaf, shape=ellipse];
                }
                """, tree.toString());
        assertTrue(tree.validAB());
        tree.remove(88);
        assertEquals("""
                digraph {
                    node [shape=record];
                    struct0 [label="<f0> |<f1> 156|<f2> "];
                    struct0:<f0> -> struct1;
                    struct1 [label="<f0> |<f1> 49|<f2> |<f3> 120|<f4> "];
                    struct1:<f0> -> struct2;
                    struct2 [label="<f0> |<f1> 39|<f2> "];
                    struct2:<f0> -> struct3;
                    struct3 [label=leaf, shape=ellipse];
                    struct2:<f2> -> struct4;
                    struct4 [label=leaf, shape=ellipse];
                    struct1:<f2> -> struct5;
                    struct5 [label="<f0> |<f1> 99|<f2> "];
                    struct5:<f0> -> struct6;
                    struct6 [label=leaf, shape=ellipse];
                    struct5:<f2> -> struct7;
                    struct7 [label=leaf, shape=ellipse];
                    struct1:<f4> -> struct8;
                    struct8 [label="<f0> |<f1> 130|<f2> "];
                    struct8:<f0> -> struct9;
                    struct9 [label=leaf, shape=ellipse];
                    struct8:<f2> -> struct10;
                    struct10 [label=leaf, shape=ellipse];
                    struct0:<f2> -> struct11;
                    struct11 [label="<f0> |<f1> 172|<f2> "];
                    struct11:<f0> -> struct12;
                    struct12 [label="<f0> |<f1> 163|<f2> "];
                    struct12:<f0> -> struct13;
                    struct13 [label=leaf, shape=ellipse];
                    struct12:<f2> -> struct14;
                    struct14 [label=leaf, shape=ellipse];
                    struct11:<f2> -> struct15;
                    struct15 [label="<f0> |<f1> 180|<f2> |<f3> 197|<f4> "];
                    struct15:<f0> -> struct16;
                    struct16 [label=leaf, shape=ellipse];
                    struct15:<f2> -> struct17;
                    struct17 [label=leaf, shape=ellipse];
                    struct15:<f4> -> struct18;
                    struct18 [label=leaf, shape=ellipse];
                }
                """, tree.toString());
        assertTrue(tree.validAB());
        tree.remove(197);
        assertEquals("""
                digraph {
                    node [shape=record];
                    struct0 [label="<f0> |<f1> 156|<f2> "];
                    struct0:<f0> -> struct1;
                    struct1 [label="<f0> |<f1> 49|<f2> |<f3> 120|<f4> "];
                    struct1:<f0> -> struct2;
                    struct2 [label="<f0> |<f1> 39|<f2> "];
                    struct2:<f0> -> struct3;
                    struct3 [label=leaf, shape=ellipse];
                    struct2:<f2> -> struct4;
                    struct4 [label=leaf, shape=ellipse];
                    struct1:<f2> -> struct5;
                    struct5 [label="<f0> |<f1> 99|<f2> "];
                    struct5:<f0> -> struct6;
                    struct6 [label=leaf, shape=ellipse];
                    struct5:<f2> -> struct7;
                    struct7 [label=leaf, shape=ellipse];
                    struct1:<f4> -> struct8;
                    struct8 [label="<f0> |<f1> 130|<f2> "];
                    struct8:<f0> -> struct9;
                    struct9 [label=leaf, shape=ellipse];
                    struct8:<f2> -> struct10;
                    struct10 [label=leaf, shape=ellipse];
                    struct0:<f2> -> struct11;
                    struct11 [label="<f0> |<f1> 172|<f2> "];
                    struct11:<f0> -> struct12;
                    struct12 [label="<f0> |<f1> 163|<f2> "];
                    struct12:<f0> -> struct13;
                    struct13 [label=leaf, shape=ellipse];
                    struct12:<f2> -> struct14;
                    struct14 [label=leaf, shape=ellipse];
                    struct11:<f2> -> struct15;
                    struct15 [label="<f0> |<f1> 180|<f2> "];
                    struct15:<f0> -> struct16;
                    struct16 [label=leaf, shape=ellipse];
                    struct15:<f2> -> struct17;
                    struct17 [label=leaf, shape=ellipse];
                }
                """, tree.toString());
        assertTrue(tree.validAB());
        tree.remove(156);
        assertEquals("""
                digraph {
                    node [shape=record];
                    struct0 [label="<f0> |<f1> 130|<f2> "];
                    struct0:<f0> -> struct1;
                    struct1 [label="<f0> |<f1> 49|<f2> "];
                    struct1:<f0> -> struct2;
                    struct2 [label="<f0> |<f1> 39|<f2> "];
                    struct2:<f0> -> struct3;
                    struct3 [label=leaf, shape=ellipse];
                    struct2:<f2> -> struct4;
                    struct4 [label=leaf, shape=ellipse];
                    struct1:<f2> -> struct5;
                    struct5 [label="<f0> |<f1> 99|<f2> |<f3> 120|<f4> "];
                    struct5:<f0> -> struct6;
                    struct6 [label=leaf, shape=ellipse];
                    struct5:<f2> -> struct7;
                    struct7 [label=leaf, shape=ellipse];
                    struct5:<f4> -> struct8;
                    struct8 [label=leaf, shape=ellipse];
                    struct0:<f2> -> struct9;
                    struct9 [label="<f0> |<f1> 172|<f2> "];
                    struct9:<f0> -> struct10;
                    struct10 [label="<f0> |<f1> 163|<f2> "];
                    struct10:<f0> -> struct11;
                    struct11 [label=leaf, shape=ellipse];
                    struct10:<f2> -> struct12;
                    struct12 [label=leaf, shape=ellipse];
                    struct9:<f2> -> struct13;
                    struct13 [label="<f0> |<f1> 180|<f2> "];
                    struct13:<f0> -> struct14;
                    struct14 [label=leaf, shape=ellipse];
                    struct13:<f2> -> struct15;
                    struct15 [label=leaf, shape=ellipse];
                }
                """, tree.toString());
        assertTrue(tree.validAB());
        tree.remove(99);
        assertEquals("""
                digraph {
                    node [shape=record];
                    struct0 [label="<f0> |<f1> 130|<f2> "];
                    struct0:<f0> -> struct1;
                    struct1 [label="<f0> |<f1> 49|<f2> "];
                    struct1:<f0> -> struct2;
                    struct2 [label="<f0> |<f1> 39|<f2> "];
                    struct2:<f0> -> struct3;
                    struct3 [label=leaf, shape=ellipse];
                    struct2:<f2> -> struct4;
                    struct4 [label=leaf, shape=ellipse];
                    struct1:<f2> -> struct5;
                    struct5 [label="<f0> |<f1> 120|<f2> "];
                    struct5:<f0> -> struct6;
                    struct6 [label=leaf, shape=ellipse];
                    struct5:<f2> -> struct7;
                    struct7 [label=leaf, shape=ellipse];
                    struct0:<f2> -> struct8;
                    struct8 [label="<f0> |<f1> 172|<f2> "];
                    struct8:<f0> -> struct9;
                    struct9 [label="<f0> |<f1> 163|<f2> "];
                    struct9:<f0> -> struct10;
                    struct10 [label=leaf, shape=ellipse];
                    struct9:<f2> -> struct11;
                    struct11 [label=leaf, shape=ellipse];
                    struct8:<f2> -> struct12;
                    struct12 [label="<f0> |<f1> 180|<f2> "];
                    struct12:<f0> -> struct13;
                    struct13 [label=leaf, shape=ellipse];
                    struct12:<f2> -> struct14;
                    struct14 [label=leaf, shape=ellipse];
                }
                """, tree.toString());
        assertTrue(tree.validAB());
        tree.remove(163);
        assertEquals("""
                digraph {
                    node [shape=record];
                    struct0 [label="<f0> |<f1> 49|<f2> |<f3> 130|<f4> "];
                    struct0:<f0> -> struct1;
                    struct1 [label="<f0> |<f1> 39|<f2> "];
                    struct1:<f0> -> struct2;
                    struct2 [label=leaf, shape=ellipse];
                    struct1:<f2> -> struct3;
                    struct3 [label=leaf, shape=ellipse];
                    struct0:<f2> -> struct4;
                    struct4 [label="<f0> |<f1> 120|<f2> "];
                    struct4:<f0> -> struct5;
                    struct5 [label=leaf, shape=ellipse];
                    struct4:<f2> -> struct6;
                    struct6 [label=leaf, shape=ellipse];
                    struct0:<f4> -> struct7;
                    struct7 [label="<f0> |<f1> 172|<f2> |<f3> 180|<f4> "];
                    struct7:<f0> -> struct8;
                    struct8 [label=leaf, shape=ellipse];
                    struct7:<f2> -> struct9;
                    struct9 [label=leaf, shape=ellipse];
                    struct7:<f4> -> struct10;
                    struct10 [label=leaf, shape=ellipse];
                }
                """, tree.toString());
        assertTrue(tree.validAB());
        tree.remove(49);
        assertEquals("""
                digraph {
                    node [shape=record];
                    struct0 [label="<f0> |<f1> 130|<f2> "];
                    struct0:<f0> -> struct1;
                    struct1 [label="<f0> |<f1> 39|<f2> |<f3> 120|<f4> "];
                    struct1:<f0> -> struct2;
                    struct2 [label=leaf, shape=ellipse];
                    struct1:<f2> -> struct3;
                    struct3 [label=leaf, shape=ellipse];
                    struct1:<f4> -> struct4;
                    struct4 [label=leaf, shape=ellipse];
                    struct0:<f2> -> struct5;
                    struct5 [label="<f0> |<f1> 172|<f2> |<f3> 180|<f4> "];
                    struct5:<f0> -> struct6;/playlist/068WHS0zOWsqvn2uIBYb5D
                    struct6 [label=leaf, shape=ellipse];
                    struct5:<f2> -> struct7;
                    struct7 [label=leaf, shape=ellipse];
                    struct5:<f4> -> struct8;
                    struct8 [label=leaf, shape=ellipse];
                }
                """, tree.toString());
        assertTrue(tree.validAB());
        tree.remove(172);
        assertEquals("""
                digraph {
                    node [shape=record];
                    struct0 [label="<f0> |<f1> 130|<f2> "];
                    struct0:<f0> -> struct1;
                    struct1 [label="<f0> |<f1> 39|<f2> |<f3> 120|<f4> "];
                    struct1:<f0> -> struct2;
                    struct2 [label=leaf, shape=ellipse];
                    struct1:<f2> -> struct3;
                    struct3 [label=leaf, shape=ellipse];
                    struct1:<f4> -> struct4;
                    struct4 [label=leaf, shape=ellipse];
                    struct0:<f2> -> struct5;
                    struct5 [label="<f0> |<f1> 180|<f2> "];
                    struct5:<f0> -> struct6;
                    struct6 [label=leaf, shape=ellipse];
                    struct5:<f2> -> struct7;
                    struct7 [label=leaf, shape=ellipse];
                }
                """, tree.toString());
        assertTrue(tree.validAB());
        tree.remove(120);
        assertEquals("""
                digraph {
                    node [shape=record];
                    struct0 [label="<f0> |<f1> 130|<f2> "];
                    struct0:<f0> -> struct1;
                    struct1 [label="<f0> |<f1> 39|<f2> "];
                    struct1:<f0> -> struct2;
                    struct2 [label=leaf, shape=ellipse];
                    struct1:<f2> -> struct3;
                    struct3 [label=leaf, shape=ellipse];
                    struct0:<f2> -> struct4;
                    struct4 [label="<f0> |<f1> 180|<f2> "];
                    struct4:<f0> -> struct5;
                    struct5 [label=leaf, shape=ellipse];
                    struct4:<f2> -> struct6;
                    struct6 [label=leaf, shape=ellipse];
                }
                """, tree.toString());
        assertTrue(tree.validAB());
        tree.remove(130);
        assertEquals("""
                digraph {
                    node [shape=record];
                    struct0 [label="<f0> |<f1> 39|<f2> |<f3> 180|<f4> "];
                    struct0:<f0> -> struct1;
                    struct1 [label=leaf, shape=ellipse];
                    struct0:<f2> -> struct2;
                    struct2 [label=leaf, shape=ellipse];
                    struct0:<f4> -> struct3;
                    struct3 [label=leaf, shape=ellipse];
                }
                """, tree.toString());
        assertTrue(tree.validAB());
        tree.remove(180);
        assertEquals("""
                digraph {
                    node [shape=record];
                    struct0 [label="<f0> |<f1> 39|<f2> "];
                    struct0:<f0> -> struct1;
                    struct1 [label=leaf, shape=ellipse];
                    struct0:<f2> -> struct2;
                    struct2 [label=leaf, shape=ellipse];
                }
                """, tree.toString());
        assertTrue(tree.validAB());
        tree.remove(39);
        assertEquals("""
                digraph {
                    node [shape=record];
                }
                """, tree.toString());
        assertTrue(tree.validAB());
    }
}
